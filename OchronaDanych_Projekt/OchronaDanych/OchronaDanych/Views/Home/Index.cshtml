@using Microsoft.AspNetCore.Identity
@using OchronaDanych.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Home Page";
}
@{
    
    ApplicationUser user = await @UserManager.GetUserAsync(User);
    if (user.IsLocked == true)
    {
        @using (Html.BeginForm("CheckMaster", "Home", FormMethod.Post))
        {
            <div class="text-center">
            <div class="form-group">
                <label>MasterPassword</label>
                <input type="password" name="MasterPassword" id="MasterPassword"/>
            </div>
            <div class="form-group">
                <a asp-area="" asp-controller="Home" asp-action="CheckMaster"><button type="submit" class="btn btn-primary">Unlock</button></a><br/>
            </div>
            </div>
        }
    } else {
        @using (Html.BeginForm("Lock", "Home", FormMethod.Post))
        {
            <div class="text-center">
            <div class="form-group">
                <a asp-area="" asp-controller="Home" asp-action="Lock"><button type="submit" class="btn btn-primary">Lock</button></a><br/>
            </div>
            </div>
        }
       
    }
    
}

@model IEnumerable<OchronaDanych.Areas.Identity.Data.DomainPassword>
    
    <div class="text-center">
        <a asp-area="" asp-controller="Home" asp-action="Create"><button type="submit" class="btn btn-primary">Add Password</button></a><br/><br/>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Domain)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Password)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Domain)
                        </td>
                        @if (user.IsLocked == false)
                        {
                            string x = Encryption.Base64Decode(item.Password);
                            <td>
                                @Html.DisplayFor(item => x)
                            </td>
                        } else 
                        {
                            <td>
                            @Html.Raw("********")
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
